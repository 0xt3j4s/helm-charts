{{- if .Values.armoVulnScanner.enabled  }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.armoVulnScanner.name }}
  namespace: {{ .Values.armoNameSpace }}
  labels:
    app: {{ .Values.armoVulnScanner.name }}
    tier: {{ .Values.global.namespaceTier}}
spec:
  replicas: {{ .Values.armoVulnScanner.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.armoVulnScanner.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      tier: {{ .Values.global.namespaceTier}}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.armoVulnScanner.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        tier: {{ .Values.global.namespaceTier}}
        app: {{ .Values.armoVulnScanner.name }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ toYaml .Values.imagePullSecrets }}
      {{- end }}
      containers:
        - name: {{ .Values.armoVulnScanner.name }}
          image: "{{ .Values.armoVulnScanner.image.repository }}:{{ .Values.armoVulnScanner.image.tag }}"
          imagePullPolicy: {{ .Values.armoVulnScanner.image.pullPolicy }}
          ports:
            - name: "vuln-scan-port"
              containerPort: 8080
              protocol: TCP
          resources:
{{ toYaml .Values.armoVulnScanner.resources | indent 12 }}
          env:
            - name: CA_CLUSTER_NAME
              value: "{{ regexReplaceAll "\\W+" .Values.clusterName "-" | lower }}"
            - name: CA_CUSTOMER_GUID
              value: "{{ .Values.accountGuid }}"
            - name: OCIMAGE_URL
              value: ""
            - name: EVENT_RECEIVER_URL
              value: "{{ .Values.k8sReportUrl }}"
            - name: CA_EVENT_RECEIVER_HTTP
{{- if eq .Values.environment "dev" }}
              value: "{{ .Values.devEventReceiverHttpUrl }}"
{{- else }} 
              value: "{{ .Values.eventReceiverHttpUrl }}"
{{- end }}      
            - name: CA_MAX_VULN_SCAN_ROUTINS
              value: "4"
            {{- range .Values.armoVulnScanner.env }}
            - name: {{ .name  }}
              value: "{{ .value }}"
            {{- end }}
          args:
            - -alsologtostderr
            - -v=4
            - 2>&1
          volumeMounts:
            - name: {{ .Values.global.beConfig }}
              mountPath: /etc/config
              readOnly: true
      volumes:
        - name: {{ .Values.global.beConfig }}
          configMap:
            name: {{ .Values.global.beConfig }}
            items:
            - key: "clusterData"
              path: "clusterData.json"
      serviceAccountName: {{ .Values.global.armoServiceAccountName }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}