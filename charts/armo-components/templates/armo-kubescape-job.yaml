apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.armoKubescape.name }}-post-install-hook
  namespace: {{ .Values.armoNameSpace }}
  labels:
    app: {{ .Values.armoKubescape.name }}-post-install-hook
    tier: {{ .Values.global.namespaceTier }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded  
spec:
  template:
    spec:
      containers:
      - name: kubescape
        image: "{{ .Values.armoKubescape.image.repository }}:{{ .Values.armoKubescape.image.tag }}"
        imagePullPolicy: {{ .Values.armoKubescape.image.pullPolicy }}
        command: ["/bin/sh","-c"]
        env:
        - name: KS_DEFAULT_CONFIGMAP_NAME
          value: "{{ .Values.armoKubescape.name }}-config"
        - name: KS_DEFAULT_CONFIGMAP_NAMESPACE
          value: "{{ .Values.armoNameSpace }}"
        args: 
        - kubescape scan --submit {{ if eq .Values.environment "dev" }}--environment=dev{{ end }}
        resources:
{{ toYaml .Values.armoKubescape.resources | indent 10 }}             
        volumeMounts:
        - name: kubescape-config-volume
          mountPath: /root/.kubescape/config.json
          subPath: config.json
      restartPolicy: OnFailure
      serviceAccountName: {{ .Values.global.armoKubescapeServiceAccountName }}
      volumes:
      - name: kubescape-config-volume
        configMap:
          name: {{ .Values.armoKubescape.name }}-config
