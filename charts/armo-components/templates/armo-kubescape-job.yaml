apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.armoKubescape.name }}-1st-time
  namespace: {{ .Values.armoNameSpace }}
  labels:
    app: {{ .Values.armoKubescape.name }}-1st-time
    tier: {{ .Values.global.namespaceTier }}
spec:
  template:
    spec:
      containers:
      - name: kubescape
        image: "{{ .Values.armoKubescape.image.repository }}:{{ .Values.armoKubescape.image.tag }}"
        imagePullPolicy: {{ .Values.armoKubescape.image.pullPolicy }}
        command: ["/bin/sh","-c"]
        args: 
        - kubescape scan --submit {{ if eq .Values.environment "dev" }}--environment=dev{{ end }}
        resources:
{{ toYaml .Values.armoKubescape.resources | indent 10 }}             
        volumeMounts:
        - name: kubescape-config-volume
          mountPath: /root/.kubescape/config.json
          subPath: config.json
      restartPolicy: OnFailure
      serviceAccountName: {{ .Values.global.armoKubescapeServiceAccountName }}
      volumes:
      - name: kubescape-config-volume
        configMap:
          name: {{ .Values.armoKubescape.name }}-config
