{{- $cloud_provider := (include "cloud_provider" .) -}}
{{- if .Capabilities.APIVersions.Has "batch/v1/CronJob" }}
apiVersion: batch/v1
{{- else if .Capabilities.APIVersions.Has "batch/v1beta1/CronJob" }}
apiVersion: batch/v1beta1
{{- else }}
apiVersion: batch/v1beta1
{{- end }}
kind: CronJob
metadata:
  name: {{ .Values.armoKubescape.name }}
  namespace: {{ .Values.armoNameSpace }}
  labels:
    app: {{ .Values.armoKubescape.name }}
    tier: {{ .Values.global.namespaceTier }}
spec:
  schedule: "{{ .Values.armoKubescape.scanSchedule }}"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: kubescape
            image: "{{ .Values.armoKubescape.image.repository }}:{{ .Values.armoKubescape.image.tag }}"
            imagePullPolicy: {{ .Values.armoKubescape.image.pullPolicy }}
           
            env:
            - name: KS_DEFAULT_CONFIGMAP_NAME
              value: "{{ .Values.armoKubescape.name }}-config"
            - name: KS_DEFAULT_CONFIGMAP_NAMESPACE
              value: "{{ .Values.armoNameSpace }}"
            {{- if $cloud_provider }}
            - name: KS_CLOUD_PROVIDER
              value: "{{ $cloud_provider }}"
            - name: KS_CLOUD_REGION
              value: "{{ .Values.cloudRegion }}"
            - name: KS_KUBE_CLUSTER
              value: "{{ .Values.clusterName }}"
            {{- if eq "gke" $cloud_provider }}
            - name: KS_GKE_PROJECT
              value: "{{ .Values.gkeProject }}"
            {{- end -}}
            {{- end }}
            command:
            - kubescape
            args:  
            - --submit
            {{ if .Values.armoKubescape.enableHostScan }}
            - --enable-host-scan
            {{ end }}
            {{ if eq .Values.environment "dev" }}
            - --environment=dev
            {{ end }}
            resources:
{{ toYaml .Values.armoKubescape.resources | indent 14 }}            
            volumeMounts:
            - name: kubescape-config-volume
              mountPath: /root/.kubescape/config.json
              subPath: config.json
          restartPolicy: OnFailure
          serviceAccountName: {{ .Values.global.armoKubescapeServiceAccountName }}
          automountServiceAccountToken: true
          volumes:
          - name: kubescape-config-volume
            configMap:
              name: {{ .Values.armoKubescape.name }}-config
